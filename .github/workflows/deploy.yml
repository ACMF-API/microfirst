name: Deploy to EKS

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    name: Build and Deploy to EKS
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set Up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Make mvnw Executable
        run: chmod +x mvnw

      - name: Build Application and Docker Image
        run: ./mvnw -Pprod verify jib:dockerBuild -DskipTests -Dmaven.javadoc.skip=true -DskipITs -C

      - name: Verify Dockerfile
        run: |
          if [ -f Dockerfile ]; then
            echo "Dockerfile found!"
          else
            echo "ERROR: Dockerfile not found!"
            exit 1
          fi

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Push Docker Image to ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker tag itstrat:latest $ECR_REGISTRY/itstrat:latest
          docker push $ECR_REGISTRY/itstrat:latest

      - name: Build and Push Docker Images
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: harish  # Update to match your ECR repo
          IMAGE_TAG: latest
        run: |
          echo "Building Docker image..."
          docker build -t 637423430820.dkr.ecr.us-east-1.amazonaws.com/harish:latest .
          echo "Pushing Docker image..."
          docker push 637423430820.dkr.ecr.us-east-1.amazonaws.com/harish:latest

      - name: Set Up kubectl
        run: |
          aws eks update-kubeconfig --region us-east-1 --name acmf-eks-test-cluster
          kubectl config current-context

      - name: Verify kubectl Context
        run: |
          kubectl config get-contexts
          kubectl cluster-info
      
      - name: Deploy Consul to EKS
        run: |
          kubectl apply -f registry-k8s/application-configmap.yml
          kubectl apply -f registry-k8s/consul.yml
          kubectl apply -f registry-k8s/consul-config-loader.yml

      - name: Wait for Consul to be Ready
        run: |
          echo "Waiting for Consul to be ready..."
          kubectl rollout status deployment/consul --timeout=300s
      - name: Verify Consul Deployment
        run: |
          kubectl get pods -o wide
          kubectl get svc consul
          kubectl logs -l app=consul --all-containers=true --prefix

      - name: Deploy Microservices Using JHipster Script
        run: |
          cd kubernetes
          bash kubectl-apply.sh -f

      - name: Verify Deployment
        run: |
          kubectl get pods -o wide
          kubectl describe deployment itstrat
          kubectl logs -l app=itstrat --all-containers=true --prefix
          kubectl get events --field-selector involvedObject.kind=Pod --sort-by=.metadata.creationTimestamp
